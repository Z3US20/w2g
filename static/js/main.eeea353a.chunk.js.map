{"version":3,"sources":["Constants.js","components/chat/Message.js","components/chat/MessageList.js","components/chat/SendMessage.js","components/chat/users/User.js","components/chat/users/UserList.js","components/chat/ChatLayout.js","components/HomeScreen.js","components/WelcomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PLAY","PAUSE","SYNC_TIME","NEW_VIDEO","ASK_FOR_VIDEO_URL","SYNC_VIDEO_INFORMATION","ASK_FOR_VIDEO_INFORMATION","JOIN_ROOM","SEND_MESSAGE","RECEIVED_MESSAGE","ASK_FOR_USERNAME","SEND_USERNAME","Message","username","text","className","MessageList","node","ReactDOM","findDOMNode","this","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","props","messages","map","message","index","Component","SendMessage","state","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","sendMessage","onSubmit","autocomplete","placeholder","onChange","required","User","UserList","users","user","ChatLayout","sendMassage","socket","emit","length","room","io","require","opts","height","width","playerVars","controls","rel","modestbranding","autoplay","HomeScreen","player","videoUrl","onSocketMethods","on","console","log","playVideo","pauseVideo","currentTime","syncTime","loadVideoById","videoId","getYoutubeIdByUrl","data","url","getVideoUrl","getCurrentTime","startSeconds","seekTo","undefined","replace","split","onReady","onStateChanged","getPlayerState","onStateChange","type","WelcomeScreen","roomid","yourname","handleRoomNameClick","createRandomRoomName","possible","i","charAt","Math","floor","random","class","color","onClick","App","currentScreen","screen","Boolean","window","location","hostname","match","config","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"2EAAAA,EAAOC,QAAU,CACbC,KAAM,OACNC,MAAO,QACPC,UAAW,YACXC,UAAW,YACXC,kBAAmB,oBACnBC,uBAAwB,yBACxBC,0BAA2B,4BAC3BC,UAAW,YACXC,aAAc,eACdC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,cAAe,kB,oMCDJC,EATC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC3B,OACE,sBAAKC,UAAU,cAAf,UACE,uBAAMA,UAAU,GAAhB,UAAqBF,EAArB,QACA,sBAAME,UAAU,GAAhB,SAAqBD,QCyBZE,E,yKAzBb,WACE,IAAMC,EAAOC,IAASC,YAAYC,MAClCA,KAAKC,qBAAuBJ,EAAKK,UAAYL,EAAKM,aAAe,KAAON,EAAKO,e,gCAG/E,WACE,GAAIJ,KAAKC,qBAAsB,CAC7B,IAAMJ,EAAOC,IAASC,YAAYC,MAClCH,EAAKK,UAAYL,EAAKO,gB,oBAI1B,WACE,OACE,qBAAKT,UAAU,iBAAf,SACGK,KAAKK,MAAMC,SAASC,KAAI,SAACC,EAASC,GACjC,OACE,cAAC,EAAD,CAAqBhB,SAAUe,EAAQf,SAAUC,KAAMc,EAAQd,MAAjDe,Y,GAnBAC,aC2BXC,E,4MA3BbC,MAAQ,CACNJ,QAAS,I,EAGXK,aAAe,SAACC,GACd,EAAKC,SAAS,CACZ,CAACD,EAAEE,OAAOC,IAAKH,EAAEE,OAAOE,S,EAI5BC,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKf,MAAMgB,YAAY,EAAKT,MAAMJ,SAClC,EAAKO,SAAS,CACZP,QAAS,M,4CAIb,WACE,OACE,sBAAMc,SAAUtB,KAAKmB,aAArB,SACE,uBAAQI,aAAa,MAAM5B,UAAU,UAAU6B,YAAY,eAAeP,GAAG,UAAUQ,SAAUzB,KAAKa,aAAcK,MAAOlB,KAAKY,MAAMJ,QAASkB,UAAQ,U,GAvBrIhB,aCQXiB,EARF,SAAC,GAAkB,IAAhBlC,EAAe,EAAfA,SACd,OACE,8BACE,qBAAKE,UAAU,QAAf,SAAyBF,OCUhBmC,EAZE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,qBAAKlC,UAAU,YAAf,SACGkC,EAAMtB,KAAI,SAACuB,EAAMrB,GAChB,OACE,cAAC,EAAD,CAAkBhB,SAAUqC,GAAjBrB,SC+BNsB,EAhCf,4MAEEC,YAAc,SAACxB,GACb,EAAKH,MAAM4B,OAAOC,KAAK9C,eAAc,CACnCK,SAAU,EAAKY,MAAMZ,SACrBC,KAAMc,KALZ,4CASE,WACE,OACE,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACA,sBAAMA,UAAU,eAAhB,UACG,6CAAiBK,KAAKK,MAAMwB,MAAMM,UACnC,cAAC,EAAD,CAAUN,MAAO7B,KAAKK,MAAMwB,WAE9B,sBAAKlC,UAAU,YAAf,UACE,8CAAiBK,KAAKK,MAAMZ,YAC5B,4CAAeO,KAAKK,MAAM+B,cAG5B,sBAAKzC,UAAU,WAAf,UAEM,cAAC,EAAD,CAAaW,SAAUN,KAAKK,MAAMC,WAClC,cAAC,EAAD,CAAaX,UAAU,gBAAgB0B,YAAarB,KAAKgC,wBAzBvE,GAAgCtB,aCC5B2B,G,MAAKC,EAAQ,KAIXC,EAAO,CACXC,OAAQ,MACRC,MAAO,MACPC,WAAY,CACVC,SAAU,EACVC,IAAK,EACLC,eAAgB,EAChBC,SAAU,IA8LCC,EA1Lf,4MAEEnC,MAAQ,CACNqB,OAAQ,KACRe,OAAQ,KACRC,SAAU,GACV3C,SAAU,GACVuB,MAAO,IAPX,EAUEqB,gBAAkB,SAACjB,GACjBA,EAAOkB,GAAG,WAAW,WACnBlB,EAAOC,KAAK/C,YAAW,CACrBiD,KAAM,EAAK/B,MAAM+B,KACjB3C,SAAU,EAAKY,MAAMZ,WAEvBwC,EAAOC,KAAKhD,gCAGd+C,EAAOkB,GAAG,cAAc,WACtBC,QAAQC,IAAI,mBAGdpB,EAAOkB,GAAGvE,QAAM,WACd,EAAKgC,MAAMoC,OAAOM,eAGpBrB,EAAOkB,GAAGtE,SAAO,WACf,EAAK+B,MAAMoC,OAAOO,gBAGpBtB,EAAOkB,GAAGrE,aAAW,SAAC0E,GACpB,EAAKC,SAASD,MAGhBvB,EAAOkB,GAAGpE,aAAW,SAACkE,GACpB,EAAKrC,MAAMoC,OAAOU,cAAc,CAC9BC,QAAS,EAAKC,kBAAkBX,KAElC,EAAKlC,SAAS,CACZkC,SAAU,QAIdhB,EAAOkB,GAAGjE,6BAA2B,WACnC,IAAM2E,EAAO,CACXC,IAAK,EAAKlD,MAAMoC,OAAOe,cACvBP,YAAa,EAAK5C,MAAMoC,OAAOgB,kBAEjC/B,EAAOC,KAAKjD,yBAAwB4E,MAGtC5B,EAAOkB,GAAGlE,0BAAwB,SAAC4E,GACjC,IAAMF,EAAU,EAAKC,kBAAkBC,EAAKC,KAC5C,EAAKlD,MAAMoC,OAAOU,cAAc,CAC9BC,QAASA,EACTM,aAAcJ,EAAKL,iBAIvBvB,EAAOkB,GAAG9D,oBAAkB,SAACwE,GAC3B,EAAK9C,SAAS,CACZT,SAAS,GAAD,mBAAM,EAAKM,MAAMN,UAAjB,CAA2B,CACjCb,SAAUoE,EAAKpE,SACfC,KAAMmE,EAAKnE,aAKjBuC,EAAOkB,GAAG7D,oBAAkB,WAC1B,EAAKyB,SAAS,CAACc,MAAO,KACtB,EAAKjB,MAAMqB,OAAOC,KAAK3C,gBAAe,EAAKc,MAAMZ,aAGnDwC,EAAOkB,GAAG5D,iBAAe,SAACE,GAExB,EAAKsB,SAAS,CACZc,MAAM,GAAD,mBAAM,EAAKjB,MAAMiB,OAAjB,CAAwBpC,UA7ErC,EAmFEgE,SAAW,SAACD,IACN,EAAK5C,MAAMoC,OAAOgB,iBAAmBR,EAAc,IAAO,EAAK5C,MAAMoC,OAAOgB,iBAAmBR,EAAc,MAC/G,EAAK5C,MAAMoC,OAAOkB,OAAOV,GACzB,EAAK5C,MAAMoC,OAAOM,cAtFxB,EA0FEM,kBAAoB,SAACE,GAYnB,YAPcK,KAFdL,EAAMA,EAAIM,QAAQ,UAAU,IAAIC,MAAM,0CAE/B,GACAP,EAAI,GAAGO,MAAM,gBACV,GAGHP,GApGX,EAyGEQ,QAAU,SAACxD,GACT,EAAKC,SAAS,CACZiC,OAAQlC,EAAEE,SAIZ,IAAMiB,EAASI,EA7HD,IA8Hd,EAAKtB,SAAS,CAACkB,WACf,EAAKiB,gBAAgBjB,IAjHzB,EAoHEsC,eAAiB,SAACzD,GAChB,OAAQ,EAAKF,MAAMoC,OAAOwB,kBACxB,KAAM,EACJ,EAAK5D,MAAMqB,OAAOC,KAAKtD,QACvB,MACF,KAAK,EACH,MACF,KAAK,EACH,EAAKgC,MAAMqB,OAAOC,KAAKpD,YAAW,EAAK8B,MAAMoC,OAAOgB,kBACpD,EAAKpD,MAAMqB,OAAOC,KAAKtD,QACvB,MACF,KAAK,EACH,EAAKgC,MAAMqB,OAAOC,KAAKrD,SACvB,MACF,KAAK,EACH,EAAK+B,MAAMqB,OAAOC,KAAKpD,YAAW,EAAK8B,MAAMoC,OAAOgB,oBAnI5D,EA6IE7C,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKR,MAAMqB,OAAOC,KAAKnD,YAAW,EAAK6B,MAAMqC,WA/IjD,EAkJEpC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZ,CAACD,EAAEE,OAAOC,IAAKH,EAAEE,OAAOE,SApJ9B,4CAwJE,WACE,OACE,sBAAKvB,UAAU,OAAf,UAGI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CACEgE,QAAQ,GACRpB,KAAMA,EACN+B,QAAStE,KAAKsE,QACdG,cAAezE,KAAKuE,eACpB5E,UAAU,OAIhB,uBAAM2B,SAAUtB,KAAKmB,aAArB,UACE,uBAAOI,aAAa,MAAM5B,UAAU,YAAY+E,KAAK,SAASlD,YAAY,qBAAqBP,GAAG,WAAWC,MAAOlB,KAAKY,MAAMqC,SAAUxB,SAAUzB,KAAKa,eACxJ,wBAAS6D,KAAK,SAAS/E,UAAU,UAAjC,6BAIA,cAAC,EAAD,CACEF,SAAUO,KAAKK,MAAMZ,SACrB2C,KAAMpC,KAAKK,MAAM+B,KACjB9B,SAAUN,KAAKY,MAAMN,SACrBuB,MAAO7B,KAAKY,MAAMiB,MAClBI,OAAQjC,KAAKY,MAAMqB,gBAlLjC,GAAgCvB,aCiCjBiE,G,kNApDb/D,MAAQ,CACNgE,OAAQ,GACRC,SAAU,I,EAGZhE,aAAe,SAACC,GACd,EAAKC,SAAS,CACZ,CAACD,EAAEE,OAAOC,IAAMH,EAAEE,OAAOE,S,EAI7BC,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKf,MAAMiB,SAAS,EAAKV,MAAMiE,SAAU,EAAKjE,MAAMgE,S,EAGtDE,oBAAsB,SAAChE,GACrB,EAAKC,SAAS,CACZ6D,OAAQ,EAAKG,0B,EAIjBA,qBAAuB,WAIrB,IAHA,IAAIrF,EAAO,GACPsF,EAAW,iEAENC,EAAI,EAAGA,EAAI,EAAGA,IACrBvF,GAAQsF,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAS7C,SAG9D,OAAOzC,G,4CAGT,WACE,OACJ,qBAAK4F,MAAM,QAAX,SACA,qBAAKA,MAAM,YAAX,SACE,uBAAMhE,SAAUtB,KAAKmB,aAArB,UACA,mCAAK,sBAAMoE,MAAM,SAAZ,iBAAL,OACE,sBAAK5F,UAAU,gBAAf,UACA,uBAAO4B,aAAa,MAAML,MAAOlB,KAAKY,MAAMiE,SAAUpD,SAAUzB,KAAKa,aAAeW,YAAY,OAAOE,UAAQ,EAACT,GAAG,aACnH,uBAAOM,aAAa,MAAML,MAAOlB,KAAKY,MAAMgE,OAAQnD,SAAUzB,KAAKa,aAAeW,YAAY,UAAUE,UAAQ,EAACT,GAAG,cAEpH,wBAAQyD,KAAK,SAAb,wBACA,wBAASA,KAAK,SAASc,QAASxF,KAAK8E,oBAArC,uC,GA9CwBpE,cCqCb+E,E,4MA/Bb7E,MAAQ,CACNnB,SAAU,GACV2C,KAAM,GACNsD,cAAe,W,EAGjBpE,SAAW,SAAC7B,EAAU2C,GACpB,EAAKrB,SAAS,CACZtB,WACA2C,OACAsD,cAAe,gB,4CAInB,WACE,IAAIC,EAQJ,MAPiC,YAA7B3F,KAAKY,MAAM8E,gBACbC,EAAS,cAAC,EAAD,CAAerE,SAAUtB,KAAKsB,YAER,eAA7BtB,KAAKY,MAAM8E,gBACbC,EAAS,cAAC,EAAD,CAAYvD,KAAMpC,KAAKY,MAAMwB,KAAM3C,SAAUO,KAAKY,MAAMnB,YAIjE,qBAAKE,UAAU,SAAf,SACGgG,Q,GA3BSjF,aCMEkF,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbR1D,EAAQ,IAAU2D,SAElBnG,IAASoG,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD4HzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxD,QAAQwD,MAAMA,EAAMpG,c","file":"static/js/main.eeea353a.chunk.js","sourcesContent":["module.exports = {\n    PLAY: 'PLAY',\n    PAUSE: 'PAUSE',\n    SYNC_TIME: 'SYNC_TIME',\n    NEW_VIDEO: 'NEW_VIDEO',\n    ASK_FOR_VIDEO_URL: 'ASK_FOR_VIDEO_URL',\n    SYNC_VIDEO_INFORMATION: 'SYNC_VIDEO_INFORMATION',\n    ASK_FOR_VIDEO_INFORMATION: 'ASK_FOR_VIDEO_INFORMATION',\n    JOIN_ROOM: 'JOIN_ROOM',\n    SEND_MESSAGE: 'SEND_MESSAGE',\n    RECEIVED_MESSAGE: 'RECEIVED_MESSAGE',\n    ASK_FOR_USERNAME: 'ASK_FOR_USERNAME',\n    SEND_USERNAME: 'SEND_USERNAME'\n  }","import React from 'react';\n\nconst Message = ({ username, text }) => {\n  return (\n    <div className=\"message-box\">\n      <span className=\"\">{ username }: </span>\n      <span className=\"\">{ text }</span>\n    </div>\n  );\n}\n\nexport default Message","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Message from './Message';\n\nclass MessageList extends Component {\n\n  componentWillUpdate() {\n    const node = ReactDOM.findDOMNode(this);\n    this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 100 >= node.scrollHeight;\n  }\n\n  componentDidUpdate() {\n    if (this.shouldScrollToBottom) {\n      const node = ReactDOM.findDOMNode(this);\n      node.scrollTop = node.scrollHeight;\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"chat-container\">\n        {this.props.messages.map((message, index) => {\n          return (\n            <Message key={index} username={message.username} text={message.text}/>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default MessageList","import React, { Component } from 'react';\n\nclass SendMessage extends Component {\n\n  state = {\n    message: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.sendMessage(this.state.message);\n    this.setState({\n      message: ''\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input  autocomplete=\"off\" className=\"msg-btn\" placeholder=\"Type message\" id=\"message\" onChange={this.handleChange} value={this.state.message} required></input>\n      </form>\n    )\n  }\n}\n\nexport default SendMessage\n","import React from 'react';\n\nconst User = ({ username }) => {\n  return (\n    <div>\n      <div className=\"users\">{ username }</div>\n    </div>\n  );\n}\n\nexport default User","import React from 'react'\nimport User from './User';\n\nconst UserList = ({ users }) => {\n  return (\n    <div className=\"user-list\">\n      {users.map((user, index) => {\n        return (\n          <User key={index} username={user} />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default UserList","\nimport React, { Component } from 'react';\nimport MessageList from './MessageList';\nimport SendMessage from './SendMessage';\nimport { SEND_MESSAGE } from '../../Constants';\nimport UserList from './users/UserList';\n\nexport class ChatLayout extends Component {\n\n  sendMassage = (message) => {\n    this.props.socket.emit(SEND_MESSAGE, {\n      username: this.props.username,\n      text: message\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n        <div className=\"info\">\n        <div  className=\"users-online\">\n           <div>Watchers: { this.props.users.length}</div>\n          <UserList users={this.props.users}/>\n        </div>\n        <div className=\"room-info\">\n          <div>Your name: {this.props.username}</div>\n          <div>Room id: {this.props.room}</div>\n        </div>\n        </div>\n        <div className=\"chat-box\">\n          \n              <MessageList messages={this.props.messages}/>\n              <SendMessage className=\"chat-send-msg\" sendMessage={this.sendMassage}/> \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatLayout","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { PLAY, PAUSE, SYNC_TIME, NEW_VIDEO, ASK_FOR_VIDEO_INFORMATION,\n   SYNC_VIDEO_INFORMATION, JOIN_ROOM, RECEIVED_MESSAGE,\n   ASK_FOR_USERNAME, SEND_USERNAME } from '../Constants'\nimport ChatLayout from './chat/ChatLayout';\nimport \"../css/style.scss\"\n\nvar io = require('socket.io-client');\nconst socketUrl = \"\"; //production\n// const socketUrl = \"http://localhost:5000\"; //development\n\nconst opts = {\n  height: '480',\n  width: '720',\n  playerVars: { // https://developers.google.com/youtube/player_parameters\n    controls: 2,\n    rel: 0,\n    modestbranding: 1,\n    autoplay: 1,\n  }\n}\n\nexport class HomeScreen extends Component {\n\n  state = {\n    socket: null,\n    player: null,\n    videoUrl: '',\n    messages: [],\n    users: []\n  }\n\n  onSocketMethods = (socket) => {\n    socket.on('connect', () => {\n      socket.emit(JOIN_ROOM, {\n        room: this.props.room,\n        username: this.props.username,\n      });\n      socket.emit(ASK_FOR_VIDEO_INFORMATION);\n    });\n\n    socket.on('disconnect', () => {\n      console.log(\"Disconnected\");\n    });\n\n    socket.on(PLAY, () => {\n      this.state.player.playVideo();\n    });\n\n    socket.on(PAUSE, () => {\n      this.state.player.pauseVideo();\n    });\n\n    socket.on(SYNC_TIME, (currentTime) => {\n      this.syncTime(currentTime);\n    })\n\n    socket.on(NEW_VIDEO, (videoUrl) => {\n      this.state.player.loadVideoById({\n        videoId: this.getYoutubeIdByUrl(videoUrl)\n      });\n      this.setState({\n        videoUrl: ''\n      });\n    });\n\n    socket.on(ASK_FOR_VIDEO_INFORMATION, () => {\n      const data = {\n        url: this.state.player.getVideoUrl(),\n        currentTime: this.state.player.getCurrentTime()\n      }\n      socket.emit(SYNC_VIDEO_INFORMATION, data);\n    });\n\n    socket.on(SYNC_VIDEO_INFORMATION, (data) => {\n      const videoId = this.getYoutubeIdByUrl(data.url)\n      this.state.player.loadVideoById({\n        videoId: videoId,\n        startSeconds: data.currentTime\n      });\n    });\n\n    socket.on(RECEIVED_MESSAGE, (data) => {\n      this.setState({\n        messages: [...this.state.messages, {\n          username: data.username,\n          text: data.text\n        }]\n      });\n    });\n\n    socket.on(ASK_FOR_USERNAME, () => {\n      this.setState({users: []})\n      this.state.socket.emit(SEND_USERNAME, this.props.username);\n    });\n\n    socket.on(SEND_USERNAME, (username) => {\n\n      this.setState({\n        users: [...this.state.users, username]\n      });\n    });\n\n  }\n\n  syncTime = (currentTime) => {\n    if (this.state.player.getCurrentTime() < currentTime - 0.5 || this.state.player.getCurrentTime() > currentTime + 0.5) {\n      this.state.player.seekTo(currentTime);\n      this.state.player.playVideo();\n    }\n  }\n\n  getYoutubeIdByUrl = (url) => {\n    var ID = '';\n    \n    url = url.replace(/(>|<)/gi,'').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n\n    if(url[2] !== undefined) {\n      ID = url[2].split(/[^0-9a-z_-]/i);\n      ID = ID[0];\n    }\n    else {\n      ID = url;\n    }\n    return ID;\n  }\n\n  onReady = (e) => {\n    this.setState({\n      player: e.target\n    });\n\n    // Socket\n    const socket = io(socketUrl);\n    this.setState({socket});\n    this.onSocketMethods(socket);\n  }\n\n  onStateChanged = (e) => {\n    switch (this.state.player.getPlayerState()) {\n      case -1:\n        this.state.socket.emit(PLAY);\n        break;\n      case 0:\n        break;\n      case 1:\n        this.state.socket.emit(SYNC_TIME, this.state.player.getCurrentTime());\n        this.state.socket.emit(PLAY);\n        break;\n      case 2:\n        this.state.socket.emit(PAUSE);\n        break;\n      case 3:\n        this.state.socket.emit(SYNC_TIME, this.state.player.getCurrentTime());\n        break;\n      case 5:\n        break;\n      default:\n        break;\n    }\n  }\n\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.state.socket.emit(NEW_VIDEO, this.state.videoUrl);\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"grid\">\n        \n      \n          <div className=\"video\">\n              <YouTube\n                videoId=\"\" // new room start video. (video id)\n                opts={opts}\n                onReady={this.onReady}\n                onStateChange={this.onStateChanged}\n                className=\"yt\"\n              />\n          \n\n          <form onSubmit={this.handleSubmit}>\n            <input autocomplete=\"off\" className=\"url-input\" type=\"submit\" placeholder=\"Insert Youtube URL\" id=\"videoUrl\" value={this.state.videoUrl} onChange={this.handleChange}></input>\n            <button  type=\"submit\" className=\"url-btn\">New video</button>\n          </form>\n          </div>\n          \n            <ChatLayout \n              username={this.props.username} \n              room={this.props.room} \n              messages={this.state.messages}\n              users={this.state.users}\n              socket={this.state.socket}\n            />\n\n      </div>\n    )\n  }\n}\n\nexport default HomeScreen","import  React,  {Component } from 'react';\nimport \"../css/components/welcome/welcome.scss\"\nclass WelcomeScreen extends Component {\n\n  state = {\n    roomid: '',\n    yourname: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id] : e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.yourname, this.state.roomid);\n  }\n\n  handleRoomNameClick = (e) => {\n    this.setState({\n      roomid: this.createRandomRoomName(),\n    })\n  }\n\n  createRandomRoomName = () => {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 5; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  }\n\n  render() {\n    return (\n<div class=\"bodjy\">\n<div class=\"container\">\n  <form onSubmit={this.handleSubmit} >\n  <h1>W<font color=\"orange\">.2.</font>G</h1>\n    <div className=\"welcome-input\">\n    <input autocomplete=\"off\" value={this.state.yourname} onChange={this.handleChange}  placeholder=\"Name\" required id=\"yourname\"></input> \n    <input autocomplete=\"off\" value={this.state.roomid} onChange={this.handleChange}  placeholder=\"Room id\" required id=\"roomid\"></input>\n    </div>\n    <button type=\"submit\">Let me in!</button>\n    <button  type=\"button\" onClick={this.handleRoomNameClick}>Random room id</button>\n  </form>  \n</div>\n</div>\n    )\n  }\n}\n\nexport default WelcomeScreen\n","\nimport React, { Component } from 'react';\nimport HomeScreen from './components/HomeScreen';\nimport WelcomeScreen from './components/WelcomeScreen';\n\nimport './css/style.scss';\nclass App extends Component {\n\n  state = {\n    username: '',\n    room: '',\n    currentScreen: 'default',\n  }\n\n  onSubmit = (username, room) => {\n    this.setState({\n      username,\n      room,\n      currentScreen: 'HomeScreen'\n    })\n  }\n\n  render() {\n    var screen;\n    if (this.state.currentScreen === 'default') {\n      screen = <WelcomeScreen onSubmit={this.onSubmit}/>\n    }\n    if (this.state.currentScreen === 'HomeScreen') {\n      screen = <HomeScreen room={this.state.room} username={this.state.username}/>\n    }\n\n    return (\n      <div className=\"screen\">\n        {screen}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}